USE mysql_assignment_db;

-- 3
SELECT BOOK_NO, BOOK_NM
FROM TB_BOOK
WHERE CHAR_LENGTH(BOOK_NM) >= 25;

-- 4
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM TB_WRITER
WHERE MOBILE_NO LIKE '019%'
	AND WRITER_NM LIKE '김%'
ORDER BY WRITER_NM ASC
LIMIT 1;

-- 5
SELECT COUNT(WRITER_NO) AS '작가(명)'
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE = '옮김';

-- 6
-- 300권 이상 등록된 도서의 저작 형태 및 등록된 도서 수량을 표시하는 SQL 구문을 작성하시오.(저작형태가 등록되지 않은 경우는 제외할 것)
-- STOCK_QTY의 최대는 98이므로 재고량이 300권 이상인 도서는 없다.
-- 가장 많은 책이 등록된 작가의 경우도 125권이므로 문제의 조건에 부합하지 않는다.
-- 풀이하지 못했다.
SELECT BOOK_NM, STOCK_QTY
FROM TB_BOOK
ORDER BY STOCK_QTY DESC; -- 98

SELECT WRITER_NO, COUNT(BOOK_NO) AS cnt
FROM TB_BOOK_AUTHOR
GROUP BY WRITER_NO
ORDER BY cnt DESC; -- 125

-- 7
SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM TB_BOOK
ORDER BY ISSUE_DATE DESC
LIMIT 2;

-- 8
SELECT w.WRITER_NM '작가 이름', COUNT(BOOK_NO) '권 수'
FROM TB_BOOK_AUTHOR a
	 INNER JOIN TB_WRITER w
	 ON a.WRITER_NO  = w.WRITER_NO
GROUP BY a.WRITER_NO
ORDER BY 2 DESC
LIMIT 3;

-- 9
START TRANSACTION;

UPDATE TB_WRITER wr
SET REGIST_DATE = (
	SELECT CONCAT(SUBSTR(bkno, 1, 4), '-', SUBSTR(bkno, 5, 2), '-', SUBSTR(bkno, 7, 2))
	FROM (
		SELECT WRITER_NO, CAST(MIN(CAST(BOOK_NO AS INTEGER)) AS CHAR(10)) AS bkno
		FROM TB_BOOK_AUTHOR
		GROUP BY WRITER_NO
	) t
	WHERE t.WRITER_NO = wr.WRITER_NO
);

SELECT WRITER_NO, REGIST_DATE
FROM TB_WRITER;

COMMIT;

-- 12
SELECT b.BOOK_NM, w.WRITER_NM 
FROM TB_BOOK b
	INNER JOIN TB_BOOK_AUTHOR a
	ON b.BOOK_NO = a.BOOK_NO
	INNER JOIN TB_WRITER w
	ON a.WRITER_NO = w.WRITER_NO
WHERE YEAR(ISSUE_DATE) = 2007
	  AND a.COMPOSE_TYPE = '옮김';
	 
-- 15
SELECT w1.WRITER_NM AS nm, COUNT(w1.WRITER_NM)
FROM TB_WRITER w1
	 INNER JOIN TB_WRITER w2
	 ON w1.WRITER_NM  = w2.WRITER_NM 
WHERE w1.WRITER_NO != w2.WRITER_NO
GROUP BY nm;

-- 16
SELECT BOOK_NO, COMPOSE_TYPE
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IS NULL;

START TRANSACTION;

UPDATE TB_BOOK_AUTHOR
SET COMPOSE_TYPE = '지음'
WHERE COMPOSE_TYPE IS NULL

SELECT BOOK_NO, COMPOSE_TYPE
FROM TB_BOOK_AUTHOR;

COMMIT;

-- 17;
SELECT WRITER_NM, OFFICE_TELNO
FROM TB_WRITER
WHERE SUBSTR(OFFICE_TELNO, 1, 3) = '02-'
	  AND SUBSTR(OFFICE_TELNO, 7, 1) = '-';
	 
-- 18
SELECT WRITER_NM
FROM TB_WRITER
WHERE DATEDIFF('2006-1-1', REGIST_DATE) > 365*31
ORDER BY WRITER_NM; 

-- 19
SELECT BOOK_NM, PRICE, STOCK_QTY, IF(STOCK_QTY < 5, '추가주문필요', '소량보유') AS STATUS
FROM TB_BOOK
WHERE PUBLISHER_NM = '황금가지'
	  AND STOCK_QTY < 10
ORDER BY STOCK_QTY DESC, BOOK_NM ASC;

-- 20
SELECT b.BOOK_NM AS 도서명, w.WRITER_NM AS 저자, t.WRITER_NM AS 역자
FROM TB_BOOK b
	 INNER JOIN (
	 	SELECT a1.BOOK_NO, a1.WRITER_NO, w1.WRITER_NM
		FROM TB_BOOK_AUTHOR a1
			 INNER JOIN TB_WRITER w1
			 ON a1.WRITER_NO = w1.WRITER_NO
		WHERE BOOK_NO = (
			SELECT BOOK_NO
			FROM TB_BOOK
			WHERE BOOK_NM = '아타트롤'
		) AND COMPOSE_TYPE = '지음'
	 ) w
	 ON b.BOOK_NO = w.BOOK_NO
	 INNER JOIN (
	 	SELECT a2.BOOK_NO, w2.WRITER_NO, w2.WRITER_NM
		FROM TB_BOOK_AUTHOR a2
			 INNER JOIN TB_WRITER w2
			 ON a2.WRITER_NO = w2.WRITER_NO
		WHERE BOOK_NO = (
			SELECT BOOK_NO
			FROM TB_BOOK
			WHERE BOOK_NM = '아타트롤'
		) AND COMPOSE_TYPE = '옮김'
	 ) t
	 ON b.BOOK_NO = t.BOOK_NO;
	
-- 21
SELECT BOOK_NM AS 도서명, STOCK_QTY AS 재고수량, PRICE AS '가격(Org)', PRICE*0.8 AS '가격(New)'
FROM TB_BOOK
WHERE DATEDIFF(NOW(), ISSUE_DATE) > 30*365
      AND STOCK_QTY >= 90;
